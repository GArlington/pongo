operation EClass getJavaExtends() {
	if (self.eSuperTypes.size() > 0) {
		return self.eSuperTypes.get(0).getJavaName();
	}
	else {
		return "Pongo";
	}
}

operation EClassifier getJavaBoxedName() {
	if (self.isAnnotatedAs("stub")) {
		return self.getAnnotationValue("stub", "javaClass");
	}
	else {
		switch (self.name) {
			case "EString": return "String";
			case "ELong": return "Long";
			case "EInt": return "Integer";
			case "EBoolean": return "Boolean";
			case "EFloat": return "Float";
			case "EIntegerObject": return "Integer";
			case "EBooleanObject": return "Boolean";
			default: return self.name;
		}
	}
}

operation EClassifier getJavaName() {
	if (self.isAnnotatedAs("stub")) {
		return self.getAnnotationValue("stub", "javaClass");
	}
	else {
		switch (self.name) {
			case "EString": return "String";
			case "ELong": return "long";
			case "EInt": return "int";
			case "EBoolean": return "boolean";
			case "EFloat": return "float";
			case "EIntegerObject": return "int";
			case "EBooleanObject": return "boolean";
			default: return self.name;
		}
	}
}

operation EClassifier getParseMethod() {
	if (self.isTypeOf(EEnum)) {
		
	}
	else {
		switch (self.name) {
			case "ELong": return "parseLong";
			case "EInt": return "parseInteger";
			case "EBoolean": return "parseBoolean";
			case "EString": return "parseString";
			case "EFloat": return "parseFloat";
			case "EIntegerObject": return "parseInteger";
			case "EBooleanObject": return "parseBoolean";
			default: return "";
		}
	}
}

operation EAttribute getDefaultJavaValue() {
	if (self.eType.name == "EString") {
		return '"' +  self.defaultValue + '"';
	}
	else if (self.eType.name == "EFloat") {
		return self.defaultValue + "f";
	}
	else if (self.defaultValue.isUndefined()) {
		if (self.eType.getJavaName() == "boolean") return false;
		else if (self.eType.getJavaName() == "int") return 0;
	}
	else if (self.eType.isTypeOf(EEnum)) {
		return self.eType.name + "." + self.defaultValue;
	}
	else {
		return self.defaultValue;
	}
}